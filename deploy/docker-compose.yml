version: '2'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ${NGINX_DATA}/conf:/etc/nginx/conf.d
      - ${NGINX_DATA}/vhost:/etc/nginx/vhost.d
      - ${NGINX_DATA}/html:/usr/share/nginx/html
      - ${NGINX_DATA}/dhparam:/etc/nginx/dhparam
      - ${NGINX_DATA}/certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - act-network
    restart: always
  letsencrypt:
    image: nginxproxy/acme-companion
    depends_on:
      - nginx-proxy
    volumes_from:
      - nginx-proxy
    volumes:
      - ${NGINX_DATA}/certs:/etc/nginx/certs
      - ${NGINX_DATA}/acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - act-network
    restart: always
  couchdb:
    container_name: couchdb
    image: couchdb
    environment:
      PROXY_ADDRESS_FORWARDING: 'true'
      VIRTUAL_HOST: couchdb.${base_url}
      LETSENCRYPT_HOST: couchdb.${base_url}
      VIRTUAL_PORT: 5984
      COUCHDB_USER: ${COUCHDB_USER}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD}
    expose:
      - '5984'
      - '4369'
      - '9100'
    volumes:
      - '${COUCHDB_DATA}:/bitnami/couchdb'
      - ./couchdb.ini:/opt/couchdb/etc/local.d/couchdb.ini
    networks:
      - act-network
    restart: always
  launch_couchdb:
    container_name: launch_couchdb
    image: couchdb
    environment:
      PROXY_ADDRESS_FORWARDING: 'true'
      VIRTUAL_HOST: launch-couchdb.${base_url}
      LETSENCRYPT_HOST: launch-couchdb.${base_url}
      VIRTUAL_PORT: 5984
      COUCHDB_USER: ${COUCHDB_USER}
      COUCHDB_PASSWORD: ${COUCHDB_PASSWORD}
    expose:
      - '5984'
      - '4369'
      - '9100'
    volumes:
      - '${LAUNCH_COUCHDB_DATA}:/bitnami/couchdb'
      - ./couchdb.ini:/opt/couchdb/etc/local.d/couchdb.ini
    networks:
      - act-network
    restart: always
  postgres:
    image: postgres
    volumes:
      - '${POSTGRES_DATA}:/var/lib/postgresql/data'
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - act-network
    restart: always
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      PROXY_ADDRESS_FORWARDING: 'true'
      VIRTUAL_HOST: keycloak.${base_url}
      LETSENCRYPT_HOST: keycloak.${base_url}
      KEYCLOAK_HOSTNAME: keycloak.${base_url}
      VIRTUAL_PORT: 8080
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: ${POSTGRES_USER}
      DB_SCHEMA: public
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
    volumes:
      - ${NGINX_DATA}/certs/:/etc/x509/https
    expose:
      - '8080'
    depends_on:
      - postgres
    networks:
      - act-network
    restart: always
networks:
  act-network:
    driver: bridge
